// This code was generated by Hypar.
// Edits to this code will be overwritten the next time you run 'hypar init'.
// DO NOT EDIT THIS FILE.

using Elements;
using Elements.GeoJSON;
using Elements.Geometry;
using Elements.Geometry.Solids;
using Elements.Validators;
using Elements.Serialization.JSON;
using Hypar.Functions;
using Hypar.Functions.Execution;
using Hypar.Functions.Execution.AWS;
using System;
using System.Collections.Generic;
using System.Linq;
using Line = Elements.Geometry.Line;
using Polygon = Elements.Geometry.Polygon;

namespace VicGovResiEnvelope
{
    #pragma warning disable // Disable all warnings

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.1.21.0 (Newtonsoft.Json v12.0.0.0)")]
    
    public  class VicGovResiEnvelopeInputs : S3Args
    
    {
        [Newtonsoft.Json.JsonConstructor]
        
        public VicGovResiEnvelopeInputs(Vector3 @frontBoundary, double @proposedBuildingHeights, Vector3 @rearBoundary, string bucketName, string uploadsBucket, Dictionary<string, string> modelInputKeys, string gltfKey, string elementsKey, string ifcKey):
        base(bucketName, uploadsBucket, modelInputKeys, gltfKey, elementsKey, ifcKey)
        {
            var validator = Validator.Instance.GetFirstValidatorForType<VicGovResiEnvelopeInputs>();
            if(validator != null)
            {
                validator.PreConstruct(new object[]{ @frontBoundary, @proposedBuildingHeights, @rearBoundary});
            }
        
            this.FrontBoundary = @frontBoundary;
            this.ProposedBuildingHeights = @proposedBuildingHeights;
            this.RearBoundary = @rearBoundary;
        
            if(validator != null)
            {
                validator.PostConstruct(this);
            }
        }
    
        /// <summary>A point which will be used to select the nearest boundary edge</summary>
        [Newtonsoft.Json.JsonProperty("Front Boundary", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Vector3 FrontBoundary { get; set; }
    
        [Newtonsoft.Json.JsonProperty("Proposed Building Heights", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Range(3.6D, 11D)]
        public double ProposedBuildingHeights { get; set; } = 3.6D;
    
        /// <summary>A point which will be used to select the nearest boundary edge</summary>
        [Newtonsoft.Json.JsonProperty("Rear Boundary", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Vector3 RearBoundary { get; set; }
    
    
    }
}